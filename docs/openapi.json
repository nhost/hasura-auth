{
   "components" : {
      "schemas" : {
         "CannotSendSmsError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "cannot-send-sms"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Error sending SMS"
                  ]
               },
               "status" : {
                  "enum" : [
                     500
                  ]
               }
            },
            "type" : "object"
         },
         "DisabledEndpointError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "disabled-endpoint"
                  ]
               },
               "message" : {
                  "enum" : [
                     "This endpoint is disabled"
                  ]
               },
               "status" : {
                  "enum" : [
                     404
                  ]
               }
            },
            "type" : "object"
         },
         "DisabledMfaTotpError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "disabled-mfa-totp"
                  ]
               },
               "message" : {
                  "enum" : [
                     "MFA TOTP is not enabled for this user"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "DisabledUserError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "disabled-user"
                  ]
               },
               "message" : {
                  "enum" : [
                     "User is disabled"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "EmailAlreadyInUseError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "email-already-in-use"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Email already in use"
                  ]
               },
               "status" : {
                  "enum" : [
                     409
                  ]
               }
            },
            "type" : "object"
         },
         "EmailAlreadyVerifiedError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "email-already-verified"
                  ]
               },
               "message" : {
                  "enum" : [
                     "User's email is already verified"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "ForbiddenAnonymousError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "forbidden-anonymous"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Anonymous users cannot access this endpoint"
                  ]
               },
               "status" : {
                  "enum" : [
                     403
                  ]
               }
            },
            "type" : "object"
         },
         "ForbiddenEndpointInProductionError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "forbidden-endpoint-in-production"
                  ]
               },
               "message" : {
                  "enum" : [
                     "This endpoint is only available on test environments"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "InternalErrorError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "internal-error"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Internal server error"
                  ]
               },
               "status" : {
                  "enum" : [
                     500
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidAdminSecretError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-admin-secret"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Invalid admin secret"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidEmailPasswordError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-email-password"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Incorrect email or password"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidOauthConfigurationError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-oauth-configuration"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Invalid OAuth configuration"
                  ]
               },
               "status" : {
                  "enum" : [
                     500
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidOtpError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-otp"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Invalid or expired OTP"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidRefreshTokenError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-refresh-token"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Invalid or expired refresh token"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidRequestError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-request"
                  ]
               },
               "message" : {
                  "enum" : [
                     "The request payload is incorrect"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidSignInMethodError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-sign-in-method"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Incorrect sign in method"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidTicketError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-ticket"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Invalid or expired verification ticket"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidWebauthnSecurityKeyError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-webauthn-security-key"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Invalid WebAuthn security key"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "InvalidWebauthnVerificationError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "invalid-webauthn-verification"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Invalid WebAuthn verification"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "Mfa" : {
            "additionalProperties" : false,
            "properties" : {
               "ticket" : {
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "MfaTypeNotFoundError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "mfa-type-not-found"
                  ]
               },
               "message" : {
                  "enum" : [
                     "There is no active MFA set for the user"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "NoTotpSecretError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "no-totp-secret"
                  ]
               },
               "message" : {
                  "enum" : [
                     "OTP secret is not set for user"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "RouteNotFoundError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "route-not-found"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Route not found"
                  ]
               },
               "status" : {
                  "enum" : [
                     404
                  ]
               }
            },
            "type" : "object"
         },
         "Session" : {
            "additionalProperties" : false,
            "properties" : {
               "accessToken" : {
                  "type" : "string"
               },
               "accessTokenExpiresIn" : {
                  "format" : "float",
                  "type" : "number"
               },
               "refreshToken" : {
                  "description" : "Refresh token during authentication or when refreshing the JWT",
                  "example" : "2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24",
                  "pattern" : "\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b",
                  "type" : "string"
               },
               "user" : {
                  "$ref" : "#/components/schemas/User"
               }
            },
            "required" : [
               "accessToken",
               "accessTokenExpiresIn",
               "refreshToken"
            ],
            "type" : "object"
         },
         "SessionPayload" : {
            "additionalProperties" : false,
            "properties" : {
               "mfa" : {
                  "$ref" : "#/components/schemas/Mfa"
               },
               "session" : {
                  "$ref" : "#/components/schemas/Session"
               }
            },
            "type" : "object"
         },
         "SignInAnonymousSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "displayName" : {
                  "example" : "John Smith",
                  "type" : "string"
               },
               "locale" : {
                  "default" : "en",
                  "description" : "A two-characters locale",
                  "example" : "en",
                  "maxLength" : 2,
                  "minLength" : 2,
                  "type" : "string"
               },
               "metadata" : {
                  "additionalProperties" : false,
                  "default" : {},
                  "example" : {
                     "firstName" : "John",
                     "lastName" : "Smith"
                  },
                  "properties" : {},
                  "type" : "object"
               }
            },
            "type" : "object"
         },
         "SignInEmailPasswordSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "password" : {
                  "example" : "Str0ngPassw#ord-94|%",
                  "type" : "string"
               }
            },
            "required" : [
               "email",
               "password"
            ],
            "type" : "object"
         },
         "SignInMfaTotpSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "otp" : {
                  "type" : "string"
               },
               "ticket" : {
                  "example" : "mfaTotp:e08204c7-40af-4434-a7ed-31c6aa37a390",
                  "pattern" : "mfaTotp:\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b",
                  "type" : "string"
               }
            },
            "required" : [
               "ticket",
               "otp"
            ],
            "type" : "object"
         },
         "SignInOtpSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "otp" : {
                  "type" : "string"
               },
               "phoneNumber" : {
                  "type" : "string"
               }
            },
            "required" : [
               "phoneNumber",
               "otp"
            ],
            "type" : "object"
         },
         "SignInPasswordlessEmailSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "options" : {
                  "additionalProperties" : false,
                  "properties" : {
                     "allowedRoles" : {
                        "default" : [
                           "me",
                           "user"
                        ],
                        "example" : [
                           "me",
                           "user"
                        ],
                        "items" : {
                           "oneOf" : [
                              {
                                 "enum" : [
                                    "me"
                                 ]
                              },
                              {
                                 "enum" : [
                                    "user"
                                 ]
                              }
                           ]
                        },
                        "type" : "array"
                     },
                     "defaultRole" : {
                        "default" : "user",
                        "enum" : [
                           "me",
                           "user"
                        ],
                        "example" : "user",
                        "type" : "string"
                     },
                     "displayName" : {
                        "example" : "John Smith",
                        "type" : "string"
                     },
                     "locale" : {
                        "default" : "en",
                        "description" : "A two-characters locale",
                        "example" : "en",
                        "maxLength" : 2,
                        "minLength" : 2,
                        "type" : "string"
                     },
                     "metadata" : {
                        "additionalProperties" : false,
                        "default" : {},
                        "example" : {
                           "firstName" : "John",
                           "lastName" : "Smith"
                        },
                        "properties" : {},
                        "type" : "object"
                     },
                     "redirectTo" : {
                        "default" : "https://my-app.com",
                        "example" : "https://my-app.com/catch-redirection",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               }
            },
            "required" : [
               "email"
            ],
            "type" : "object"
         },
         "SignInPasswordlessSmsSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "options" : {
                  "additionalProperties" : false,
                  "properties" : {
                     "allowedRoles" : {
                        "default" : [
                           "me",
                           "user"
                        ],
                        "example" : [
                           "me",
                           "user"
                        ],
                        "items" : {
                           "oneOf" : [
                              {
                                 "enum" : [
                                    "me"
                                 ]
                              },
                              {
                                 "enum" : [
                                    "user"
                                 ]
                              }
                           ]
                        },
                        "type" : "array"
                     },
                     "defaultRole" : {
                        "default" : "user",
                        "enum" : [
                           "me",
                           "user"
                        ],
                        "example" : "user",
                        "type" : "string"
                     },
                     "displayName" : {
                        "example" : "John Smith",
                        "type" : "string"
                     },
                     "locale" : {
                        "default" : "en",
                        "description" : "A two-characters locale",
                        "example" : "en",
                        "maxLength" : 2,
                        "minLength" : 2,
                        "type" : "string"
                     },
                     "metadata" : {
                        "additionalProperties" : false,
                        "default" : {},
                        "example" : {
                           "firstName" : "John",
                           "lastName" : "Smith"
                        },
                        "properties" : {},
                        "type" : "object"
                     },
                     "redirectTo" : {
                        "default" : "https://my-app.com",
                        "example" : "https://my-app.com/catch-redirection",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               },
               "phoneNumber" : {
                  "type" : "string"
               }
            },
            "required" : [
               "phoneNumber"
            ],
            "type" : "object"
         },
         "SignInVerifyWebauthnSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "credential" : {
                  "additionalProperties" : false,
                  "properties" : {},
                  "type" : "object"
               },
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               }
            },
            "required" : [
               "email",
               "credential"
            ],
            "type" : "object"
         },
         "SignInWebauthnSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               }
            },
            "required" : [
               "email"
            ],
            "type" : "object"
         },
         "SignOutSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "all" : {
                  "default" : false,
                  "description" : "Sign out from all connected devices",
                  "type" : "boolean"
               },
               "refreshToken" : {
                  "description" : "Refresh token during authentication or when refreshing the JWT",
                  "example" : "2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24",
                  "pattern" : "\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b",
                  "type" : "string"
               }
            },
            "required" : [
               "refreshToken"
            ],
            "type" : "object"
         },
         "SignUpEmailPasswordSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "options" : {
                  "additionalProperties" : false,
                  "properties" : {
                     "allowedRoles" : {
                        "default" : [
                           "me",
                           "user"
                        ],
                        "example" : [
                           "me",
                           "user"
                        ],
                        "items" : {
                           "oneOf" : [
                              {
                                 "enum" : [
                                    "me"
                                 ]
                              },
                              {
                                 "enum" : [
                                    "user"
                                 ]
                              }
                           ]
                        },
                        "type" : "array"
                     },
                     "defaultRole" : {
                        "default" : "user",
                        "enum" : [
                           "me",
                           "user"
                        ],
                        "example" : "user",
                        "type" : "string"
                     },
                     "displayName" : {
                        "example" : "John Smith",
                        "type" : "string"
                     },
                     "locale" : {
                        "default" : "en",
                        "description" : "A two-characters locale",
                        "example" : "en",
                        "maxLength" : 2,
                        "minLength" : 2,
                        "type" : "string"
                     },
                     "metadata" : {
                        "additionalProperties" : false,
                        "default" : {},
                        "example" : {
                           "firstName" : "John",
                           "lastName" : "Smith"
                        },
                        "properties" : {},
                        "type" : "object"
                     },
                     "redirectTo" : {
                        "default" : "https://my-app.com",
                        "example" : "https://my-app.com/catch-redirection",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               },
               "password" : {
                  "description" : "A password of minimum 3 characters",
                  "example" : "Str0ngPassw#ord-94|%",
                  "minLength" : 3,
                  "type" : "string"
               }
            },
            "required" : [
               "email",
               "password"
            ],
            "type" : "object"
         },
         "TokenSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "refreshToken" : {
                  "description" : "Refresh token during authentication or when refreshing the JWT",
                  "example" : "2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24",
                  "pattern" : "\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b",
                  "type" : "string"
               }
            },
            "required" : [
               "refreshToken"
            ],
            "type" : "object"
         },
         "TotpAlreadyActiveError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "totp-already-active"
                  ]
               },
               "message" : {
                  "enum" : [
                     "TOTP MFA already active"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "TotpPayload" : {
            "additionalProperties" : false,
            "properties" : {
               "imageUrl" : {
                  "description" : "Data URL of the QR code",
                  "type" : "string"
               },
               "totpSecret" : {
                  "description" : "TOTP secret",
                  "type" : "string"
               }
            },
            "required" : [
               "imageUrl",
               "totpSecret"
            ],
            "type" : "object"
         },
         "UnauthenticatedUserError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "unauthenticated-user"
                  ]
               },
               "message" : {
                  "enum" : [
                     "User is not logged in"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "UnauthorizedError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "type" : "string"
               },
               "message" : {
                  "type" : "string"
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "required" : [
               "error",
               "status"
            ],
            "type" : "object"
         },
         "UnverifiedUserError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "unverified-user"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Email is not verified"
                  ]
               },
               "status" : {
                  "enum" : [
                     401
                  ]
               }
            },
            "type" : "object"
         },
         "User" : {
            "additionalProperties" : false,
            "properties" : {
               "activeMfaType" : {
                  "anyOf" : [
                     {
                        "enum" : [
                           ""
                        ],
                        "type" : "string"
                     },
                     {
                        "enum" : [
                           "totp"
                        ],
                        "type" : "string"
                     }
                  ],
                  "description" : "Multi-factor authentication type. A null value deactivates MFA",
                  "example" : "totp"
               },
               "avatarUrl" : {
                  "type" : "string"
               },
               "createdAt" : {
                  "format" : "date-time",
                  "type" : "string"
               },
               "defaultRole" : {
                  "default" : "user",
                  "enum" : [
                     "me",
                     "user"
                  ],
                  "example" : "user",
                  "type" : "string"
               },
               "displayName" : {
                  "example" : "John Smith",
                  "type" : "string"
               },
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "emailVerified" : {
                  "default" : false,
                  "type" : "boolean"
               },
               "id" : {
                  "description" : "Id of the user",
                  "example" : "2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24",
                  "pattern" : "\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b",
                  "type" : "string"
               },
               "isAnonymous" : {
                  "default" : false,
                  "type" : "boolean"
               },
               "locale" : {
                  "default" : "en",
                  "description" : "A two-characters locale",
                  "example" : "en",
                  "maxLength" : 2,
                  "minLength" : 2,
                  "type" : "string"
               },
               "metadata" : {
                  "additionalProperties" : false,
                  "default" : {},
                  "example" : {
                     "firstName" : "John",
                     "lastName" : "Smith"
                  },
                  "properties" : {},
                  "type" : "object"
               },
               "phoneNumber" : {
                  "type" : "string"
               },
               "phoneNumberVerified" : {
                  "default" : false,
                  "type" : "boolean"
               },
               "roles" : {
                  "default" : [
                     "me",
                     "user"
                  ],
                  "example" : [
                     "me",
                     "user"
                  ],
                  "items" : {
                     "oneOf" : [
                        {
                           "enum" : [
                              "me"
                           ]
                        },
                        {
                           "enum" : [
                              "user"
                           ]
                        }
                     ]
                  },
                  "type" : "array"
               }
            },
            "required" : [
               "createdAt",
               "displayName",
               "avatarUrl",
               "locale",
               "email",
               "isAnonymous",
               "defaultRole",
               "metadata",
               "activeMfaType",
               "emailVerified",
               "phoneNumber",
               "phoneNumberVerified",
               "roles"
            ],
            "type" : "object"
         },
         "UserDeanonymizeSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "connection" : {
                  "example" : "email",
                  "type" : "string"
               },
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "options" : {
                  "additionalProperties" : false,
                  "properties" : {
                     "allowedRoles" : {
                        "default" : [
                           "me",
                           "user"
                        ],
                        "example" : [
                           "me",
                           "user"
                        ],
                        "items" : {
                           "oneOf" : [
                              {
                                 "enum" : [
                                    "me"
                                 ]
                              },
                              {
                                 "enum" : [
                                    "user"
                                 ]
                              }
                           ]
                        },
                        "type" : "array"
                     },
                     "defaultRole" : {
                        "default" : "user",
                        "enum" : [
                           "me",
                           "user"
                        ],
                        "example" : "user",
                        "type" : "string"
                     },
                     "displayName" : {
                        "example" : "John Smith",
                        "type" : "string"
                     },
                     "locale" : {
                        "default" : "en",
                        "description" : "A two-characters locale",
                        "example" : "en",
                        "maxLength" : 2,
                        "minLength" : 2,
                        "type" : "string"
                     },
                     "metadata" : {
                        "additionalProperties" : false,
                        "default" : {},
                        "example" : {
                           "firstName" : "John",
                           "lastName" : "Smith"
                        },
                        "properties" : {},
                        "type" : "object"
                     },
                     "redirectTo" : {
                        "default" : "https://my-app.com",
                        "example" : "https://my-app.com/catch-redirection",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               },
               "password" : {
                  "example" : "Str0ngPassw#ord-94|%",
                  "type" : "string"
               },
               "signInMethod" : {
                  "enum" : [
                     "email-password",
                     "passwordless"
                  ],
                  "example" : "email-password",
                  "type" : "string"
               }
            },
            "required" : [
               "signInMethod",
               "email"
            ],
            "type" : "object"
         },
         "UserEmailChangeSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "newEmail" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "options" : {
                  "additionalProperties" : false,
                  "properties" : {
                     "redirectTo" : {
                        "default" : "https://my-app.com",
                        "example" : "https://my-app.com/catch-redirection",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               }
            },
            "type" : "object"
         },
         "UserEmailSendVerificationEmailSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "options" : {
                  "additionalProperties" : false,
                  "properties" : {
                     "redirectTo" : {
                        "default" : "https://my-app.com",
                        "example" : "https://my-app.com/catch-redirection",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               }
            },
            "required" : [
               "email"
            ],
            "type" : "object"
         },
         "UserMfaSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "activeMfaType" : {
                  "anyOf" : [
                     {
                        "enum" : [
                           ""
                        ],
                        "type" : "string"
                     },
                     {
                        "enum" : [
                           "totp"
                        ],
                        "type" : "string"
                     }
                  ],
                  "description" : "Multi-factor authentication type. A null value deactivates MFA",
                  "example" : "totp"
               },
               "code" : {
                  "description" : "MFA activation code",
                  "type" : "string"
               }
            },
            "required" : [
               "code"
            ],
            "type" : "object"
         },
         "UserNotAnonymousError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "user-not-anonymous"
                  ]
               },
               "message" : {
                  "enum" : [
                     "Logged in user is not anonymous"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "UserNotFoundError" : {
            "additionalProperties" : false,
            "properties" : {
               "error" : {
                  "enum" : [
                     "user-not-found"
                  ]
               },
               "message" : {
                  "enum" : [
                     "No user found"
                  ]
               },
               "status" : {
                  "enum" : [
                     400
                  ]
               }
            },
            "type" : "object"
         },
         "UserPasswordResetSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "email" : {
                  "description" : "A valid email",
                  "example" : "john.smith@nhost.io",
                  "format" : "email",
                  "type" : "string"
               },
               "options" : {
                  "additionalProperties" : false,
                  "properties" : {
                     "redirectTo" : {
                        "default" : "https://my-app.com",
                        "example" : "https://my-app.com/catch-redirection",
                        "type" : "string"
                     }
                  },
                  "type" : "object"
               }
            },
            "required" : [
               "email"
            ],
            "type" : "object"
         },
         "UserPasswordSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "newPassword" : {
                  "example" : "Str0ngPassw#ord-94|%",
                  "type" : "string"
               },
               "ticket" : {
                  "type" : "string"
               }
            },
            "required" : [
               "newPassword"
            ],
            "type" : "object"
         },
         "UserProviderTokensSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "providerId" : {
                  "type" : "string"
               },
               "userId" : {
                  "description" : "Id of the user",
                  "example" : "2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24",
                  "pattern" : "\\b[0-9a-f]{8}\\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\\b[0-9a-f]{12}\\b",
                  "type" : "string"
               }
            },
            "required" : [
               "providerId",
               "userId"
            ],
            "type" : "object"
         },
         "VerifyAddSecurityKeySchema" : {
            "additionalProperties" : false,
            "properties" : {
               "credential" : {
                  "additionalProperties" : false,
                  "properties" : {},
                  "type" : "object"
               },
               "nickname" : {
                  "type" : "string"
               }
            },
            "required" : [
               "credential"
            ],
            "type" : "object"
         },
         "VerifySchema" : {
            "additionalProperties" : false,
            "properties" : {
               "redirectTo" : {
                  "default" : "https://my-app.com",
                  "example" : "https://my-app.com/catch-redirection",
                  "type" : "string"
               },
               "ticket" : {
                  "type" : "string"
               },
               "type" : {
                  "type" : "string"
               }
            },
            "required" : [
               "redirectTo",
               "ticket",
               "type"
            ],
            "type" : "object"
         },
         "VerifyTokenSchema" : {
            "additionalProperties" : false,
            "properties" : {
               "token" : {
                  "description" : "Access token",
                  "example" : "eyJhbGciOiJIUzI1NiJ9.eyJodHRwczovL2hhc3VyYS5pby9qd3QvY2xhaW1zIjp7IngtaGFzdXJhLWFsbG93ZWQtcm9sZXMiOlsibWUiLCJ1c2VyIl0sIngtaGFzdXJhLWRlZmF1bHQtcm9sZSI6InVzZXIiLCJ4LWhhc3VyYS11c2VyLWlkIjoiODAwYjA2ZWYtNGMyYi00NjQwLWIyMjAtNWZlNjk3ZWNjZGM2IiwieC1oYXN1cmEtdXNlci1pcy1hbm9ueW1vdXMiOiJmYWxzZSJ9LCJzdWIiOiI4MDBiMDZlZi00YzJiLTQ2NDAtYjIyMC01ZmU2OTdlY2NkYzYiLCJpc3MiOiJoYXN1cmEtYXV0aCIsImlhdCI6MTY1MTg2NTkwMCwiZXhwIjoxNjUxODY2ODAwfQ.IvFIMXOe6J21fyEfPkP9Caim3C_uAD2qimK4oGpNm44",
                  "pattern" : "^[A-Za-z0-9-_]+\\.[A-Za-z0-9-_]+\\.[A-Za-z0-9-_.+/=]*$",
                  "type" : "string"
               }
            },
            "type" : "object"
         },
         "Version" : {
            "example" : "0.17.1",
            "type" : "string"
         }
      },
      "securitySchemes" : {
         "BearerAuth" : {
            "scheme" : "bearer",
            "type" : "http"
         }
      }
   },
   "info" : {
      "description" : "Authentication for Hasura",
      "license" : {
         "name" : "MIT",
         "url" : ""
      },
      "termsOfService" : "",
      "title" : "Hasura auth",
      "version" : "0.17.1"
   },
   "openapi" : "3.0.0",
   "paths" : {
      "/healthz" : {
         "get" : {
            "deprecated" : false,
            "parameters" : [],
            "responses" : {
               "200" : {
                  "description" : "Success"
               }
            },
            "security" : [],
            "summary" : "Check if the server is up and running",
            "tags" : [
               "General"
            ]
         }
      },
      "/mfa/totp/generate" : {
         "get" : {
            "deprecated" : false,
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/TotpPayload"
                        }
                     }
                  },
                  "description" : "Success"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthenticatedUserError"
                        }
                     }
                  },
                  "description" : "User is not authenticated"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [
               {
                  "BearerAuth" : []
               }
            ],
            "summary" : "Generate a secret to request the activation of Time-based One-Time Password (TOTP) multi-factor authentication",
            "tags" : [
               "User management"
            ]
         }
      },
      "/signin/anonymous" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInAnonymousSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionPayload"
                        }
                     }
                  },
                  "description" : "User successfully authenticated"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Anonymous authentication",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/email-password" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInEmailPasswordSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionPayload"
                        }
                     }
                  },
                  "description" : "Signed in successfully"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthorizedError"
                        }
                     }
                  },
                  "description" : "Invalid email or password, or user is not verified"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Authenticate with email + password",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/mfa/totp" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInMfaTotpSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionPayload"
                        }
                     }
                  },
                  "description" : "User successfully authenticated"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Sign in with a Time-base One-Time Password (TOTP) ticket",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/passwordless/email" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInPasswordlessEmailSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Email sent successfully"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledUserError"
                        }
                     }
                  },
                  "description" : "User is disabled"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Email passwordless authentication",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/passwordless/sms" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInPasswordlessSmsSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "SMS sent successfully"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Send a one-time password by SMS",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/passwordless/sms/otp" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInOtpSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionPayload"
                        }
                     }
                  },
                  "description" : "User successfully authenticated"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthorizedError"
                        }
                     }
                  },
                  "description" : "Error processing the request"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Passwordless authentication from a one-time password code received by SMS",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/provider/{provider}" : {
         "get" : {
            "deprecated" : false,
            "parameters" : [
               {
                  "deprecated" : false,
                  "description" : "name param description",
                  "in" : "path",
                  "name" : "provider",
                  "required" : true,
                  "schema" : {
                     "enum" : [
                        "github",
                        "google",
                        "facebook",
                        "twitter",
                        "apple",
                        "azuread",
                        "windowslive",
                        "linkedin",
                        "spotify",
                        "strava",
                        "gitlab",
                        "bitbucket",
                        "twitch"
                     ],
                     "type" : "string"
                  }
               },
               {
                  "deprecated" : false,
                  "description" : "-",
                  "in" : "query",
                  "name" : "redirectUrl",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "302" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Redirect to the provider's authentication page"
               }
            },
            "security" : [],
            "summary" : "",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/provider/{provider}/callback" : {
         "get" : {
            "deprecated" : false,
            "parameters" : [
               {
                  "deprecated" : false,
                  "description" : "name param description",
                  "in" : "path",
                  "name" : "provider",
                  "required" : true,
                  "schema" : {
                     "enum" : [
                        "github",
                        "google",
                        "facebook",
                        "twitter",
                        "apple",
                        "azuread",
                        "windowslive",
                        "linkedin",
                        "spotify",
                        "strava",
                        "gitlab",
                        "bitbucket",
                        "twitch"
                     ],
                     "type" : "string"
                  }
               },
               {
                  "deprecated" : false,
                  "description" : "",
                  "in" : "query",
                  "name" : "redirectUrl",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "302" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Redirect to the initial url given as a query parameter in /signin/provider/{provider}"
               }
            },
            "security" : [],
            "summary" : "Oauth callback url, that will be used by the Oauth provider, to redirect to the client application. Attention: all providers are using a GET operation, except Apple and Azure AD that use POST",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/webauthn" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInWebauthnSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Sign in using email via FIDO2 Webauthn authentication",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signin/webauthn/verify" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignInVerifyWebauthnSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionPayload"
                        }
                     }
                  },
                  "description" : "Signed in successfully"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthorizedError"
                        }
                     }
                  },
                  "description" : "Invalid email or password, or user is not verified"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Verfiy FIDO2 Webauthn authentication using public-key cryptography",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signout" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignOutSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Successfully signed out"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthenticatedUserError"
                        }
                     }
                  },
                  "description" : "User must be signed in to sign out from all sessions"
               }
            },
            "security" : [
               {
                  "BearerAuth" : []
               }
            ],
            "summary" : "Sign out",
            "tags" : [
               "Sign out"
            ]
         }
      },
      "/signup/email-password" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignUpEmailPasswordSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionPayload"
                        }
                     }
                  },
                  "description" : "Successfully registered. Null session means email verification is pending"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "409" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/EmailAlreadyInUseError"
                        }
                     }
                  },
                  "description" : "Email is already present in the database"
               }
            },
            "security" : [],
            "summary" : "Signup with email and password",
            "tags" : [
               "Registration"
            ]
         }
      },
      "/signup/webauthn" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignUpWebauthnSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Sign up using email via FIDO2 Webauthn authentication",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/signup/webauthn/verify" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/SignUpVerifyWebauthnSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionPayload"
                        }
                     }
                  },
                  "description" : "Signed in successfully"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Verfiy FIDO2 Webauthn authentication and complete signup",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/token" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/TokenSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/SessionModel"
                        }
                     }
                  },
                  "description" : "User successfully authenticated"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthorizedError"
                        }
                     }
                  },
                  "description" : "Unauthenticated user or invalid token"
               }
            },
            "security" : [],
            "summary" : "Refresh the access JWT token",
            "tags" : [
               "General"
            ]
         }
      },
      "/token/verify" : {
         "post" : {
            "deprecated" : false,
            "description" : "If request body is not passed the autorization header will be used to be verified",
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/VerifyTokenSchema"
                     }
                  }
               },
               "description" : "",
               "required" : false
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Valid JWT token"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthorizedError"
                        }
                     }
                  },
                  "description" : "Unauthenticated user or invalid token"
               }
            },
            "security" : [],
            "summary" : "Veify JWT token",
            "tags" : [
               "General"
            ]
         }
      },
      "/user" : {
         "get" : {
            "deprecated" : false,
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/User"
                        }
                     }
                  },
                  "description" : "User information"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthenticatedUserError"
                        }
                     }
                  },
                  "description" : "User is not authenticated"
               }
            },
            "security" : [
               {
                  "BearerAuth" : []
               }
            ],
            "summary" : "Get user information",
            "tags" : [
               "User management"
            ]
         }
      },
      "/user/deanonymize" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UserDeanonymizeSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Success"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload format is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthenticatedUserError"
                        }
                     }
                  },
                  "description" : "User is not authenticated"
               }
            },
            "security" : [
               {
                  "BearerAuth" : []
               }
            ],
            "summary" : "'Deanonymize' an anonymous user in adding missing email or email+password, depending on the chosen authentication method. Will send a confirmation email if the server is configured to do so.",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/user/email/change" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UserEmailChangeSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "A verification email has been sent to the new email"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload format is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthenticatedUserError"
                        }
                     }
                  },
                  "description" : "User is not authenticated"
               }
            },
            "security" : [
               {
                  "BearerAuth" : []
               }
            ],
            "summary" : "Change the current user's email",
            "tags" : [
               "User management"
            ]
         }
      },
      "/user/email/send-verification-email" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UserEmailSendVerificationEmailSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Success"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload format is invalid"
               }
            },
            "security" : [],
            "summary" : "Send an email to verify the account",
            "tags" : [
               "User management"
            ]
         }
      },
      "/user/mfa" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UserMfaSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Success"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload format is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthenticatedUserError"
                        }
                     }
                  },
                  "description" : "User is not authenticated"
               }
            },
            "security" : [
               {
                  "BearerAuth" : []
               }
            ],
            "summary" : "Activate/deactivate Multi-factor authentication",
            "tags" : [
               "Authentication"
            ]
         }
      },
      "/user/password" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UserPasswordSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "tapplication/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "The password has been successfully changed"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthenticatedUserError"
                        }
                     }
                  },
                  "description" : "User is not authenticated"
               }
            },
            "security" : [
               {
                  "BearerAuth" : []
               }
            ],
            "summary" : "Set a new password",
            "tags" : [
               "User management"
            ]
         }
      },
      "/user/password/reset" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UserPasswordResetSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "The email to reset the password has been sent"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               }
            },
            "security" : [],
            "summary" : "Send an email asking the user to reset their password",
            "tags" : [
               "User management"
            ]
         }
      },
      "/user/provider/tokens" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [
               {
                  "deprecated" : false,
                  "description" : "Hasura admin secret",
                  "in" : "header",
                  "name" : "x-hasura-admin-secret",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/UserProviderTokensSchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "Success"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload format is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidAdminSecretError"
                        }
                     }
                  },
                  "description" : "Incorrect admin secret header"
               }
            },
            "security" : [],
            "summary" : "Refresh the Oauth access tokens of a given user. You must be an admin to perform this operation.",
            "tags" : [
               "User management"
            ]
         }
      },
      "/user/webauthn/add" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "responses" : {
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthorizedError"
                        }
                     }
                  },
                  "description" : "Invalid email or password, or user is not verified"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Initialize adding of a new webauthn security key (device, browser)",
            "tags" : [
               "User management"
            ]
         }
      },
      "/user/webauthn/verify" : {
         "post" : {
            "deprecated" : false,
            "parameters" : [],
            "requestBody" : {
               "content" : {
                  "application/json" : {
                     "schema" : {
                        "$ref" : "#/components/schemas/VerifyAddSecurityKeySchema"
                     }
                  }
               },
               "description" : "",
               "required" : true
            },
            "responses" : {
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload is invalid"
               },
               "401" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/UnauthorizedError"
                        }
                     }
                  },
                  "description" : "Invalid email or password, or user is not verified"
               },
               "404" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/DisabledEndpointError"
                        }
                     }
                  },
                  "description" : "The feature is not activated"
               }
            },
            "security" : [],
            "summary" : "Verfiy adding of a new webauth security key (device, browser)",
            "tags" : [
               "User management"
            ]
         }
      },
      "/verify" : {
         "get" : {
            "deprecated" : false,
            "parameters" : [
               {
                  "deprecated" : false,
                  "description" : "Ticket generated in the previous actions and sent by email",
                  "in" : "query",
                  "name" : "ticket",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               },
               {
                  "deprecated" : false,
                  "description" : "name param description",
                  "in" : "query",
                  "name" : "type",
                  "required" : true,
                  "schema" : {
                     "enum" : [
                        "emailVerify",
                        "emailConfirmChange",
                        "signinPasswordless",
                        "passwordReset"
                     ],
                     "type" : "string"
                  }
               },
               {
                  "deprecated" : false,
                  "description" : "Redirection link",
                  "in" : "query",
                  "name" : "redirectTo",
                  "required" : true,
                  "schema" : {
                     "type" : "string"
                  }
               }
            ],
            "responses" : {
               "302" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "type" : "string"
                        }
                     }
                  },
                  "description" : "{redirectTo}?refreshToken=${refreshToken}&type=${type}"
               },
               "400" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/InvalidRequestError"
                        }
                     }
                  },
                  "description" : "The payload format is invalid"
               }
            },
            "security" : [],
            "summary" : "Verify tickets created by email verification, email passwordless authentication, or password reset",
            "tags" : [
               "General"
            ]
         }
      },
      "/version" : {
         "get" : {
            "deprecated" : false,
            "parameters" : [],
            "responses" : {
               "200" : {
                  "content" : {
                     "application/json" : {
                        "schema" : {
                           "$ref" : "#/components/schemas/Version"
                        }
                     }
                  },
                  "description" : "Hasura auth version"
               }
            },
            "security" : [],
            "summary" : "Get the current Hasura-auth version",
            "tags" : [
               "General"
            ]
         }
      }
   },
   "security" : [
      {
         "BearerAuth" : []
      }
   ],
   "servers" : [],
   "tags" : []
}

openapi: "3.0.0"
info:
  version: 1.0.0
  title: Nhost Auth
  description: Service to Authenticate
  termsOfService: http://swagger.io/terms/
  contact:
    name: Nhost's Support
    email: support@nhost.io
    url: https://nhost.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
paths:
  /signin/email-password:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignInEmailPasswordRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignInEmailPasswordResponse'
          description: >-
            Successfully signed in. Null session means TOTP challenge is needed

      summary: Sign in with email and password
      tags:
        - signin
        - email-and-password

  /signup/email-password:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpEmailPasswordRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPayload'
          description: >-
            Successfully registered. Null session means email verification is
            pending
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            Signup mechanism is disabled
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: >-
            User with given email already exists

      summary: Signup with email and password
      tags:
        - signup
        - email-and-password

  /user/email/change:
    post:
      summary: Change user email
      tags:
        - user
      security:
        - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserEmailChangeRequest'
      responses:
        '200':
          description: >-
            Email change requested. An email with a verification link has been sent to the new address
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserEmailChangeResponse'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    ErrorResponse:
      type: object
      additionalProperties: false
      properties:
        status:
          description: HTTP status error code
          type: integer
        message:
          description: Human friendly error message
          type: string
        error:
          description: Error code that identifies the application error
          type: string
          enum:
            - default-role-must-be-in-allowed-roles
            - disabled-user
            - email-already-in-use
            - forbidden-anonymous
            - internal-server-error
            - invalid-email-password
            - invalid-request
            - locale-not-allowed
            - password-too-short
            - password-in-hibp-database
            - redirecTo-not-allowed
            - role-not-allowed
            - signup-disabled
            - unverified-user
      required:
        - status
        - message
        - error

    SignInEmailPasswordResponse:
      type: object
      additionalProperties: false
      properties:
        session:
          $ref: "#/components/schemas/Session"
        mfa:
          $ref: "#/components/schemas/MFAChallengePayload"

    MFAChallengePayload:
      type: object
      additionalProperties: false
      properties:
        ticket:
          type: string
      required:
        - ticket

    SessionPayload:
      type: object
      additionalProperties: false
      properties:
        session:
          $ref: "#/components/schemas/Session"

    Session:
      type: object
      additionalProperties: false
      properties:
        accessToken:
          type: string
        accessTokenExpiresIn:
          type: integer
          format: int64
        refreshToken:
          description: Refresh token during authentication or when refreshing the JWT
          example: 2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
        - accessToken
        - accessTokenExpiresIn
        - refreshToken

    User:
      type: object
      additionalProperties: false
      properties:
        avatarUrl:
          type: string
        createdAt:
          format: date-time
          type: string
        defaultRole:
          example: user
          type: string
        displayName:
          example: John Smith
          type: string
        email:
          description: A valid email
          example: john.smith@nhost.io
          format: email
          type: string
        emailVerified:
          type: boolean
        id:
          description: Id of the user
          example: 2c35b6f3-c4b9-48e3-978a-d4d0f1d42e24
          pattern: \b[0-9a-f]{8}\b-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-\b[0-9a-f]{12}\b
          type: string
        isAnonymous:
          type: boolean
        locale:
          description: A two-characters locale
          example: en
          maxLength: 2
          minLength: 2
          type: string
        metadata:
          type: object
          additionalProperties: true
          example:
            firstName: John
            lastName: Smith
          properties: {}
        phoneNumber:
          type: string
        phoneNumberVerified:
          type: boolean
        roles:
          example:
            - me
            - user
          type: array
          items:
            type: string
      required:
        - avatarUrl
        - createdAt
        - defaultRole
        - displayName
        - email
        - emailVerified
        - id
        - isAnonymous
        - locale
        - metadata
        - phoneNumber
        - phoneNumberVerified
        - roles

    UserEmailChangeRequest:
      type: object
      additionalProperties: false
      properties:
        newEmail:
          description: A valid email
          example: john.smith@nhost.io
          format: email
          type: string
        options:
          type: object
          additionalProperties: false
          properties:
            redirectTo:
              example: https://my-app.com/catch-redirection
              type: string
      required:
        - newEmail

    UserEmailChangeResponse:
      type: string
      additionalProperties: false
      enum:
        - OK

    SignInEmailPasswordRequest:
      type: object
      additionalProperties: false
      properties:
        email:
          description: A valid email
          example: john.smith@nhost.io
          format: email
          type: string
        password:
          description: A password of minimum 3 characters
          example: Str0ngPassw#ord-94|%
          minLength: 3
          type: string
      required:
        - email
        - password

    SignUpEmailPasswordRequest:
      type: object
      additionalProperties: false
      properties:
        email:
          description: A valid email
          example: john.smith@nhost.io
          format: email
          type: string
        password:
          description: A password of minimum 3 characters
          example: Str0ngPassw#ord-94|%
          minLength: 3
          type: string
        options:
          $ref: "#/components/schemas/SignUpOptions"
      required:
        - email
        - password

    SignUpOptions:
      type: object
      additionalProperties: false
      properties:
        allowedRoles:
          example:
            - me
            - user
          type: array
          items:
            type: string
        defaultRole:
          example: user
          type: string
        displayName:
          example: John Smith
          type: string
        locale:
          description: A two-characters locale
          example: en
          maxLength: 2
          minLength: 2
          type: string
        metadata:
          type: object
          additionalProperties: true
          example:
            firstName: John
            lastName: Smith
          properties: {}
        redirectTo:
          example: https://my-app.com/catch-redirection
          type: string
